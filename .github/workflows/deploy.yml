name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PEM }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "Host *" > ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
        chmod 600 ~/.ssh/config

    - name: Create Nginx Config
      run: |
        mkdir -p nginx
        printf "server {\n    listen 80;\n    server_name _;\n    root /var/www/html;\n    index index.html;\n    \n    location / {\n        try_files \$uri \$uri/ =404;\n    }\n}\n" > nginx/default.conf

    - name: Setup Web Server
      run: |
        scp -i ~/.ssh/id_rsa -o IdentitiesOnly=yes nginx/default.conf ec2-user@${{ secrets.EC2_HOST }}:/tmp/default.conf
        ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes ec2-user@${{ secrets.EC2_HOST }} "sudo bash -c 'sudo yum update -y && sudo yum install -y nginx && sudo mkdir -p /var/www/html && sudo mv /tmp/default.conf /etc/nginx/conf.d/default.conf && sudo chown -R nginx:nginx /var/www/html && sudo chmod -R 755 /var/www/html && sudo systemctl enable nginx && sudo systemctl start nginx && sudo systemctl status nginx'"

    - name: Deploy files
      run: |
        zip -r website.zip ./* || exit 1
        scp -v -i ~/.ssh/id_rsa -o IdentitiesOnly=yes website.zip ec2-user@${{ secrets.EC2_HOST }}:/tmp/ || exit 1
        ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes ec2-user@${{ secrets.EC2_HOST }} "sudo bash -c 'cd /var/www/html && rm -rf * && unzip -o /tmp/website.zip && chown -R nginx:nginx /var/www/html && systemctl restart nginx'" || exit 1

    - name: Verify deployment
      run: |
        sleep 5
        curl -f http://${{ secrets.EC2_HOST }} || exit 1 